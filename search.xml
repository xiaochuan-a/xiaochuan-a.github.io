<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>你也长尾巴了吗</title>
      <link href="/posts/A1.html"/>
      <url>/posts/A1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success no-icon"><p>大家好像都很着急，有人因为游戏在酒吧接吻，有人宿醉后和陌生人去开房，还有人刚认识第二天就着急在朋友圈官宣秀恩爱，<br>因为一场剧本就可以相爱，俗套老旧的剧情又在不停的上演而我好像死在了过去，我坚信着爱一个人要了解她的性格了解她的<br>三观，要花费很长时间慢慢了解，然后再下定决心笃定去爱，对我而言爱是一个很沉重的话题，沉重到不能轻易说出口，我知<br>道那些认识第二天说爱我的人其实不是爱我，只是觉得符合她们的标准罢了。而我悲哀的像旧时代古典爱情一样，守着烧着半<br>截的蜡烛，看着这个滥情的时代 。</p><p>2023/09/16 00：50 更新：<br><span class="blue">其实那次我因为你玩原神在带一个男生找宝箱生气是有原因的，如果没有那件事，我或许不会这样，因为那个感觉让人窒息<br>或许这才是我们分手的真正原因吧</span><br><span class="blue"> 2018 年 11 月份的时候，谈过一次恋爱，是初恋，现在回想起来我和她刚在一起的时候也是彻夜长谈，无话不说。</span><br><span class="blue">那一年我刚从技校毕业，从学校分配的工作跑路之后，就去干厨师了。很累，因为我是学徒，基本什么活都是我来做。</span><br><span class="blue">早上 9 点上班晚上闲了 10 点下班，忙的时候 12 点下班，下班前还要准备好第二天需要做的菜，打扫卫生…</span><br><span class="blue"> 我在跟她在一起之前也考虑了很久，我的工作并不是那么光彩，身上每天都有一股很奇怪的味道，像过期的食物。</span><br><span class="blue">当时那种感觉好像是挺喜欢的，已经记不清了，我们是初中同学，初三的时候认识的，她说我唱歌很好听，才对她有点印象。</span><br><span class="blue">我跟她加上好友好像是因为同学录吧，那个时候手机都没有，偷偷去网吧上网还被我老爸逮住过一次，差点连学都没得上。</span><br><span class="blue">18 年 11 月份的时候我就跟她表白了，后面当天就在一起，但是… 是异地恋，我在郑州，她在福建。就只能通过手机聊天</span><br><span class="blue">总是聊天也会有聊尽话题的一天</span><br><span class="blue"> “你玩王者吗”<br>“之前玩过 不过后来卸载了”<br>“要不要在下载回来一起玩”<br>“好呀！等我们下班一起玩！”</span><br><span class="blue"> 后面就一起下班玩王者荣耀，聊天。后来在我们一起玩游戏的时候，她拉了一个男生，我就问她这个男生是谁。</span><br><span class="blue">因为本身就是一个占有欲比较强的人，那我肯定会想很多，后面才会发现她把我绿了，挺搞笑的哈哈哈哈。</span><br><span class="blue">她说 “这个男生是在上学的时候认识的，他有女朋友，他也知道我有男朋友” 叫我不要乱想。</span><br><span class="blue">我那个时候很单纯，确实没有乱想，后面也就把这件事给忘了。在我们谈了 2 个月快三个月的时候，她的情绪或者说态度就不一样。了</span><br><span class="blue">那个时候也快过年了，她给我的感觉就是很奇怪，什么也不说，一个人在那 emo，发一些我看不懂的说说。</span><br><span class="blue">我曾经以为我们能一直走下去，但是所有的东西都能编造，都可以是假的，唯独感觉不会骗你</span><br><span class="blue">后来啊，在一个晚上，她就跟我提出了分手，当时我看到这些话脑子直接空白了，过了很久我才问她：“认真的？”</span><br><span class="blue"> 她说，她现在的状态不适合谈恋爱，她自己也不知道怎么了，总之给我说了一大堆，还说她不会再谈恋爱了，<br>我说好啊，那我们分手吧。开始解除情侣关系，删除说说，删除微博。<br>其实在分手之前发生了一件事，就是这件事我才知道，她，有多么的恶心。<br>她的闺蜜送了一件红色汉服，那天晚上她跟我说要去试试衣服，我说那你去呗，她穿完回来之后跟我说还挺好看的<br>我说我也想看给我看看呗，她说已经脱了因为挺冷的。我没在意，因为大冬天确实挺冷的。<br>分手之后我那段时间挺平淡的，只是切菜的时候老切着手，挺疼的…<br> 后来我就上游戏嘛，王者荣耀有一个关系的功能，可以跟好友设置亲密关系，基友，闺蜜，情侣什么的<br>原本我只是好奇的看了一眼，然后我就发现她跟那个曾经亲口对我说的有对象的男生的关系是 “情侣”，哈哈哈哈哈<br>我那个时候也没想过这么戏剧性的一幕发生在了我身上，后来我就通过王者去看了那个男生的 QQ 空间，王者上面是显示 QQ 号的<br>那个男生他的空间没有设置权限，挺意外的，后面我就看他发的说说，在我们还在一起的时间，她俩互动的还挺频繁的<br>已经记不清他们说了什么了，反正，挺暧昧的…<br> 还记得我提到过的那件我们还在一起的时候，她闺蜜送她的那件红色汉服吗，她穿汉服的照片出现在了这个男生的空间，下面她回复了一句 “嘤嘤嘤”<br> 嗯… 嗯…<br> 那个时候除了呆滞，我不知道要去怎么形容了。<br>冬天，很冷，我站在自己家的院子里，有点喘不上气，胸口很闷，身上的寒毛像炸了一样立起来，<br>之后就缓了挺长时间的，我还有几次这么想 “如果我要是更好一点，更有能力一点，她是不是就不会离开了”<br> 现在想想真的挺弱智了，都把你绿了，帽子都带上了，你还在想是自己的错。<br>我承认，这个时候我更加自卑了。<br>其实时间真的会冲淡一切，现在她在我记忆里，就好像一个连陌生人都不如的路人甲，想到她挺恶心的<br>所以我才会生气… 那种，我不知道算不算生气，我只知道那个时候我很害怕，一种凌驾于我理性之上的害怕<br>对不起… 我很想你，很想很想很想<br></span></p></div>]]></content>
      
      
      
        <tags>
            
            <tag> 猫猫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些常用但是经常忘的代码使用方法</title>
      <link href="/posts/asd2.html"/>
      <url>/posts/asd2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note success no-icon"><p>stream 流的常见使用方法，别嘲笑我，反正我是容易忘…</p></div><figure class="highlight java"><figcaption><span>stream流的常见使用方法  参考链接 mark:1,6-7</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将数据通过stream流转换成key value的形式，使用的场景很多，取值得话直接根据产品编码Key获取就行</span></span><br><span class="line">HashMap&lt;String, String&gt; prodistCollect = prodistCharacters.stream()</span><br><span class="line">                        .collect(HashMap::<span class="keyword">new</span>, (x, item)-&gt; x.put(item.getCharNum(),item.getCharValue()),HashMap::putAll);</span><br><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> prodistCollect.get(BusinessConstants.Character.PRODUCT_NUMBER_92023660001);</span><br><span class="line">逻辑判断...</span><br><span class="line">逻辑判断...</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果是产品的属性是有特殊的规则，比如成对出现的这种（0和1）我们就可以用stream流中的groupingBy方法来进行一个分组</span></span><br><span class="line">Map&lt;String, List&lt;ProdordCharacter&gt;&gt; listMap = prodordCharacters.stream().collect(Collectors.groupingBy(ProdordCharacter::getAction));</span><br><span class="line"><span class="comment">//根据Action0和1进行分组</span></span><br><span class="line">List&lt;ProdordCharacter&gt; prodordCharacters0 = listMap.get(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">List&lt;ProdordCharacter&gt; prodordCharacters1 = listMap.get(<span class="string">&quot;1&quot;</span>);</span><br><span class="line"><span class="comment">//获取所有的Action0和1属性组</span></span><br><span class="line">HashMap&lt;String, String&gt; map0 = prodordCharacters0.stream().collect(HashMap&lt;String, String&gt;::<span class="keyword">new</span>, (x, item) -&gt; x.put(item.getCharNum(), item.getCharValue()), HashMap::putAll);</span><br><span class="line">HashMap&lt;String, String&gt; map1 = prodordCharacters1.stream().collect(HashMap&lt;String, String&gt;::<span class="keyword">new</span>, (x, item) -&gt; x.put(item.getCharNum(), item.getCharValue()), HashMap::putAll);</span><br><span class="line">（通过map0和map1获取值来进行逻辑判断.....）</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过stream流里面的filter进行过滤，获取到指定产品编码的值，下面就是通过filter获取到30037属性的值，如果没有值则复制为空字符串</span></span><br><span class="line"><span class="comment">//对这个方法的返回值进行操作的时候要记得用StringUtils.isNotBlank()或者别的判空来做一个非空判断，不然可能会报转换异常</span></span><br><span class="line"><span class="type">String</span> <span class="variable">icbVal</span> <span class="operator">=</span> prodordTemplates.getProdordIcbs().stream()</span><br><span class="line">                        .filter(prodordIcbs -&gt; BusinessConstants.Icb.ICB_30037.equals(prodordIcbs.getParameterNum()))</span><br><span class="line">                        .map(ProdordIcbs::getParameterValue)</span><br><span class="line">                        .findFirst()</span><br><span class="line">                        .orElse(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//还有一种方法获取到指定产品编码的值，跟上面这种一样的方法进行过滤，但是最终返回值的类型不一样 </span></span><br><span class="line">Optional&lt;ProdordCharacters&gt; siteNumOptional = prodordCharactersList.stream().filter(x -&gt; BusinessConstants.Character.ICB_30037.equals(x.getCharNum())).findFirst();</span><br><span class="line"><span class="keyword">if</span> (siteNumOptional.isPresent()) &#123;</span><br><span class="line">    <span class="type">ProdordCharacters</span> <span class="variable">siteNumCharacters</span> <span class="operator">=</span> siteNumOptional.get();</span><br><span class="line">    <span class="type">String</span> <span class="variable">charValue</span> <span class="operator">=</span> siteNumCharacters.getCharValue();</span><br><span class="line">    逻辑判断...</span><br><span class="line">    逻辑判断...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取到这个属性具体字段的值，不然我这个返回的就是一个list</span></span><br><span class="line"><span class="type">String</span> <span class="variable">templateNum</span> <span class="operator">=</span> queryProdistSkuInfoRsp.getProdistTemplates()</span><br><span class="line">        .stream()</span><br><span class="line">        .map(ProdistTemplateDto::getTemplateNum)</span><br><span class="line">        .collect(Collectors.joining(<span class="string">&quot;&quot;</span>));</span><br><span class="line"><span class="comment">//将list集合转换成对象（如果明确只有一组数据的话 不然会出问题）</span></span><br><span class="line">List&lt;ProdordTemplates&gt; prodordTemplate = prodordSkus.getProdordTemplate();</span><br><span class="line"><span class="type">ProdordTemplates</span> <span class="variable">prodordTemplates1</span> <span class="operator">=</span> prodordTemplate.stream().findFirst().orElse(<span class="literal">null</span>);</span><br><span class="line"><span class="comment">//判断这个对象是否为空</span></span><br><span class="line">Optional&lt;ProdordTemplates&gt; optionalTemplates = Optional.ofNullable(prodordTemplates1);</span><br><span class="line"><span class="keyword">if</span> (optionalTemplates.isPresent()) &#123;</span><br><span class="line">    <span class="comment">// 对象不为空的处理逻辑</span></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotBlank(templateNum)) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rateTmplByTemplateNum</span> <span class="operator">=</span> callProductServiceClient.getRateTmplByTemplateNum(templateNum);</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">rateresult</span> <span class="operator">=</span> JSONObject.parseObject(rateTmplByTemplateNum);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ratebizCode</span> <span class="operator">=</span> rateresult.getString(<span class="string">&quot;bizCode&quot;</span>);</span><br><span class="line">        <span class="type">PcRateTmpl</span> <span class="variable">pcRateTmpl</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;00000&quot;</span>.equals(ratebizCode)) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">datarate</span> <span class="operator">=</span> rateresult.getString(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (com.bboss.common.util.StringUtils.isNotBlank(datarate)) &#123;</span><br><span class="line">                pcRateTmpl = JSONObject.parseObject(datarate, PcRateTmpl.class);</span><br><span class="line">                <span class="comment">//直接get返回的就是一个对象</span></span><br><span class="line">                <span class="type">ProdordTemplates</span> <span class="variable">prodordTemplates</span> <span class="operator">=</span> optionalTemplates.get();</span><br><span class="line">                <span class="keyword">if</span> ((pcRateTmpl.getNote().equals(<span class="string">&quot;M&quot;</span>) &amp;&amp; prodordTemplates.getNote().equals(<span class="string">&quot;F&quot;</span>)) </span><br><span class="line">                || (pcRateTmpl.getNote().equals(<span class="string">&quot;F&quot;</span>) &amp;&amp; prodordTemplates.getNote().equals(<span class="string">&quot;M&quot;</span>))) &#123;</span><br><span class="line">                    errMsg = String.format(<span class="string">&quot;当前套餐：[%s]，不支持包年包月互转!&quot;</span>,templateNum);</span><br><span class="line">                    log.error(errMsg);</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(errMsg);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note info"><p>简单的试一下这个代码块功能，下面代码其实很 low，看个乐呵就好，不必研究╰(<em>°▽°</em>)╯（不知道我在自言自语什么）</p></div><figure class="highlight java"><figcaption><span>解析JSON取值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line">...</span><br><span class="line"><span class="comment">//下面只是一个示例</span></span><br><span class="line"><span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&quot;&#123;\&quot;check\&quot;:\&quot;[&#x27;1=&gt;-1&#x27;,&#x27;2=&gt;0|1|2|3|4|5&#x27;]\&quot;,\&quot;target\&quot;:\&quot;sjfl\&quot;&#125;&quot;</span>;</span><br><span class="line"><span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span>JSONObject.parseObject(a);</span><br><span class="line"><span class="type">String</span> <span class="variable">target</span> <span class="operator">=</span> jsonObject.get(<span class="string">&quot;target&quot;</span>).toString();</span><br><span class="line"><span class="type">String</span> <span class="variable">target1</span> <span class="operator">=</span> jsonObject.getString(<span class="string">&quot;target&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">check</span> <span class="operator">=</span> jsonObject.get(<span class="string">&quot;check&quot;</span>).toString();</span><br><span class="line">ArrayList&lt;String&gt; arrayList = JSON.parseObject(check, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;ArrayList&lt;String&gt;&gt;() &#123;&#125;);</span><br><span class="line"><span class="keyword">for</span> (String s : arrayList) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;数组得值&quot;</span>+s);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 无 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试记录案例</title>
      <link href="/posts/asd1.html"/>
      <url>/posts/asd1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note default"><p>后续测试都会在这里面进行，一些奇怪的功能完善这个帖子就不再了呢<br> 2023/08/24 11：59 更新：<br>最近真的好忙，忙到每天晚上都是一点钟睡觉，疲惫<br>因为最近我还要学习 PR,AE 巴拉巴拉的，而且最近真的太忙了，你知道那种 bug 满天飞的感觉吗…<br> 就好像你睡觉，上帝强行掰开你的眼睛给你的双眼糊了一层屎…<br>emmm 所以就先不搞这个网页了，但是我不会忘记的，这是我最珍视的💕<br>回见～</p></div><div class="note primary"><p>基本基本</p></div><div class="note info"><p>提示提示</p></div><div class="note success no-icon"><p>成功成功</p></div><div class="note success"><p>成功成功</p></div><div class="note warning"><p>警告警告</p></div><div class="note danger"><p>危险危险</p></div><div class="note danger no-icon"><p>危险危险</p></div><div class="note warning"><p>==<mark><mark><mark><mark><mark><mark><mark><mark><mark><mark><mark><mark><mark> 我只是一个分割线，我只是一个分割线</mark></mark></mark></mark></mark></mark></mark></mark></mark></mark></mark></mark></mark></p></div><p><span class="label">我是默认的标签卡</span><br><span class="label primary"> “铃芽，好痛”“都说了很痛了，铃芽”“你不喜欢吗，不喜欢大臣吗”“铃芽，不喜欢大臣啊”</span><br><span class="label info"> 当记忆消散，黑暗将你环绕时，就抓住你心底的力量</span><br><span class="label success">✔️没错我是个对号＜（＾－＾）＞</span><br><span class="label warning">警告警告警告</span><br><span class="label danger">💔danger</span></p><div class="note warning"><p>==<mark><mark><mark><mark><mark><mark><mark><mark><mark><mark><mark><mark><mark> 我只是一个分割线，我只是一个分割线</mark></mark></mark></mark></mark></mark></mark></mark></mark></mark></mark></mark></mark></p></div><ul class="task-list danger"><li class="task-list-item"><input type="checkbox" id="cbx_0" disabled="true"><label for="cbx_0"> 这是一个小叉叉</label></li><li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true"><label for="cbx_1"> 这是一个红色勾勾</label></li></ul><ul class="task-list primary"><li class="task-list-item"><input type="checkbox" id="cbx_2" disabled="true"><label for="cbx_2"> 未完成</label></li><li class="task-list-item"><input type="checkbox" id="cbx_3" checked="true" disabled="true"><label for="cbx_3"> 完成</label></li></ul><ul class="task-list"><li class="task-list-item"><input type="checkbox" id="cbx_4" disabled="true"><label for="cbx_4"> 未完成</label></li><li class="task-list-item"><input type="checkbox" id="cbx_5" checked="true" disabled="true"><label for="cbx_5"> 默认颜色</label></li></ul><p><span class="red">人们追随星星，星星追随什么呢</span><br><span class="pink">最大的悲剧就是眼看悲剧发生却无能无力</span><br><span class="orange">夜晚越黑暗，星星就越明亮</span><br><span class="yellow">恐惧是一副沉重的枷锁，猎人必须步伐轻盈身手敏捷</span><br><span class="green">何以与君识，无言泪千行</span><br><span class="aqua">愤怒于我没有意义，只是一道不断溃烂的伤口而已</span><br><span class="blue">想象有这样一个地方，永远是黑夜，而你不肯放弃期待，那永远不会到来的黎明。我不用想象，我去过那</span><br><span class="purple">天命！主宰！欺诈！</span><br><span class="grey">世界既不黑也不白，而是一道精致的灰</span><br><span class="blue">泪到尽头，声声泣血，亦步亦趋，同生共体，暗夜生光，月涌天河，一念一动，天人永隔，黑暗落尽，月华满天</span></p><div class="note info"><p>以下是折叠标签卡的使用方式</p></div><details><summary>默认默认 这里是一段文字</summary><div><p>++ 下划线 ++</p></div></details><details class="primary"><summary>紫色</summary><div><div class="note info"><p>参考信息</p></div><ul><li>第一行</li><li>第二行</li></ul></div></details><details class="warning"><summary>黄色</summary><div><p>!! 警告警告警告警告警告！！{.bulr}<br><span class="label success">label</span></p></div></details><details class="danger"><summary>红色</summary><div><p><span class="label danger">danger</span></p></div></details><div class="note info"><p>以下是表情的使用方式</p></div><p>😘<br>💍<br>🎶<br>💕</p><div class="note primary"><p>试一下标签卡里面可以不可以展示 GIF 动态图片，嘿嘿嘿 (●ˇ∀ˇ●)</p></div><details class="info"><summary>蓝色</summary><div><div class="tab" data-id="id2" data-title="Tom会嘲笑你"><p><img data-src="https://s1.locimg.com/2023/07/21/bc4651b5497c9.gif" alt></p></div><div class="tab" data-id="id2" data-title="宵宫我老婆！"><p><img data-src="https://s1.locimg.com/2023/07/21/24392f342afee.gif" alt></p></div></div></details>]]></content>
      
      
      
        <tags>
            
            <tag> 无 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这个里面是图片哦</title>
      <link href="/posts/asd.html"/>
      <url>/posts/asd.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img data-src="https://s1.locimg.com/2023/07/17/00c6b927479f0.jpg" alt><br><img data-src="https://s2.loli.net/2023/07/19/LElFxSDsYmKqGvN.jpg" alt><br><img data-src="https://s2.loli.net/2023/07/19/Gfy4Z52qPis1Vzr.jpg" alt><br><img data-src="https://s2.loli.net/2023/07/19/ZYApErVO5NSvkcd.png" alt><br><img data-src="https://s2.loli.net/2023/07/19/mJFHNE5YayrdnqS.jpg" alt><br><img data-src="https://s2.loli.net/2023/07/19/JTR3sdXcQF5bLjy.jpg" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> 无 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
